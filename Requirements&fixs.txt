sudo dnf update -y
sudo dnf install -y python3 python3-pip git gcc make zlib-devel openssl-devel bzip2-devel libffi-devel
sudo pip3 install --upgrade pip


mkdir my-ai-app
cd my-ai-app


python3 -m venv venv
source venv/bin/activate


pip install flask google-generativeai python-dotenv boto3


python app.py

mkdir static
cd static


Run the Flask Application:

python app.py


The error message "Address already in use, Port 5000 is in use by another program" means that another application is already listening on port 5000 on your server. When you try to start your Flask application, it can't bind to that port because it's already taken.

Here's how to resolve this:

1. Identify the Process Using Port 5000

Use the netstat or ss command to find the process ID (PID) of the application using port 5000.

netstat (may not be available on all systems by default):

sudo netstat -tulpn | grep 5000

ss (more modern and often preferred):

sudo ss -tulpn | grep 5000

The output will show you the PID of the process using port 5000. For example:

tcp   0   0 0.0.0.0:5000   0.0.0.0:*   LISTEN  1234/python

2. Stop the Process

Once you have the PID, you can stop the process using the kill command:

sudo kill 1234  # Replace 1234 with the actual PID


If the process doesn't stop with kill, you can use kill -9 to force it to stop (but be careful with this, as it can cause data loss if the process is writing to disk):

sudo kill -9 1234


3. Determine the Cause (and Prevent Future Conflicts)

The most important question is: What program is already running on port 5000? There are a few common possibilities:

Previous Instance of Your Flask App: You might have accidentally left a previous instance of your Flask application running in the background. Stopping it (as described above) is the solution.

Another Application: Some other application on your server might be configured to use port 5000. You'll need to identify that application and either:

Reconfigure it to use a different port.

Stop it if you don't need it.

Change your Flask application to use a different port.

Flask Development Server Not Shut Down Properly: If you were previously running the Flask development server and closed the terminal without properly stopping the server (e.g., by pressing Ctrl+C), the server might still be running in the background.

4. Change Your Flask Application Port (If Necessary)

If you can't stop the other application using port 5000, you can change the port that your Flask application uses. Modify the app.run() line in your app.py file:



if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5001)  # Changed port to 5001
